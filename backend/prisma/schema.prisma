generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MuscleGroupEnum {
  CHEST
  UPPERBACK
  SHOULDERS
  BICEPS
  TRICEPS
  ABS
}


model Exercise {
  id           Int         @id @default(autoincrement())
  name         String
  img          String
  instructions String
  muscle       Int         @default(0)
  videolink    String      @default("src")
  MuscleGroup  MuscleGroup @relation(fields: [muscle], references: [id])
}

model MuscleGroup {
  id        Int             @id @unique @default(autoincrement())
  name      MuscleGroupEnum
  img       String
  fullimage String          @default("src")
  Exercise  Exercise[]
}

model User {
  id                  Int                  @id @default(autoincrement())
  name                String
  email               String
  password            String   
  HealthProfile       UserHealthprofile?
  Workplacepreference Workplacepreference?
  UserProgress        UserProgress[]
  // UserSessions        UserSessions?
}

// UserHealthprofile is the optional filed

model UserHealthprofile {
  id       Int    @id @default(autoincrement())
  userid   Int    @unique
  User     User?  @relation(fields: [userid], references: [id])
  fullname String
  contact  String
  weight   Int
  height   Int
  diet     String
  address  String
}

model Workplacepreference {
  id           Int     @id @default(autoincrement())
  userid       Int     @unique
  User         User    @relation(fields: [userid], references: [id])
  workoutplace String
  gymname      String?
}

model Diet {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  img         String
}

model Recipes {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  img         String
}

model UserProgress {
  id             Int      @id @default(autoincrement())
  enrolledDate   DateTime
  ComlpetionDate DateTime
  userid         Int
  User           User     @relation(fields: [userid], references: [id])
  progress1      BigInt //for first 64 days as bigint is 64 bit
  progress2      BigInt //for next 64 bits 
  progress3      BigInt // for nex 32 bits

  @@unique([userid, enrolledDate])
}

// model UserSessions{
//   id  Int @id @default(autoincrement())
//   userid Int @unique 
//   User   User  @relation(fields: [userid] , references: [id])
//   jwt  String
// }